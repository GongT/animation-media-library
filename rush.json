/**
 * This is the main configuration file for Rush.
 * For full documentation, please see https://rushjs.io
 */ {
	"$schema": "https://developer.microsoft.com/json-schemas/rush/v5/rush.schema.json",
	"rushVersion": "5.131.0",
	"pnpmVersion": "9.7.0",
	"nodeSupportedVersionRange": ">=20",
	"suppressNodeLtsWarning": true,
	"projectFolderMinDepth": 2,
	"projectFolderMaxDepth": 2,
	"allowMostlyStandardPackageNames": true,
	/**
	 * This feature helps you to review and approve new packages before they are introduced
	 * to your monorepo.  For example, you may be concerned about licensing, code quality,
	 * performance, or simply accumulating too many libraries with overlapping functionality.
	 * The approvals are tracked in two config files "browser-approved-packages.json"
	 * and "nonbrowser-approved-packages.json".  See the Rush documentation for details.
	 */
	// "approvedPackagesPolicy": {
	//   /**
	//    * The review categories allow you to say for example "This library is approved for usage
	//    * in prototypes, but not in production code."
	//    *
	//    * Each project can be associated with one review category, by assigning the "reviewCategory" field
	//    * in the "projects" section of rush.json.  The approval is then recorded in the files
	//    * "common/config/rush/browser-approved-packages.json" and "nonbrowser-approved-packages.json"
	//    * which are automatically generated during "rush update".
	//    *
	//    * Designate categories with whatever granularity is appropriate for your review process,
	//    * or you could just have a single category called "default".
	//    */
	//   "reviewCategories": [
	//     // Some example categories:
	//     "production", // projects that ship to production
	//     "tools",      // non-shipping projects that are part of the developer toolchain
	//     "prototypes"  // experiments that should mostly be ignored by the review process
	//   ],
	//
	//   /**
	//    * A list of NPM package scopes that will be excluded from review.
	//    * We recommend to exclude TypeScript typings (the "@types" scope), because
	//    * if the underlying package was already approved, this would imply that the typings
	//    * are also approved.
	//    */
	//   // "ignoredNpmScopes": ["@types"]
	// },
	"repository": {
		"url": "https://github.com/GongT/animation-media-library",
		"defaultBranch": "master",
		"defaultRemote": "origin"
	},
	"eventHooks": {
		"preRushInstall": [],
		"postRushInstall": [],
		"preRushBuild": [],
		"postRushBuild": []
	},
	"hotfixChangeEnabled": true,
	// "allowedProjectTags": [ "tools", "frontend-team", "1.0.0-release" ],
	"projects": [
		{
			"packageName": "@internal/rig",
			"projectFolder": "@internal/rig",
			"tags": []
		}
	]
}
